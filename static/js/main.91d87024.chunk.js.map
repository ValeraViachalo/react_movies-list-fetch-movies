{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","React","memo","movie","className","alt","src","imgUrl","title","description","target","rel","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","titleMovie","setTitleMovie","moviePreview","setMoviePreview","isLoading","setLoading","hasError","setError","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","onChange","value","classNames","disabled","onClick","query","trim","fetch","then","res","json","catch","Response","Error","Title","Plot","Poster","imdbID","finally","App","setMovies","currentMovie","find","currentFilm","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91d87024.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = React.memo(({ movie }) => {\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            alt=\"Film logo\"\n            src={movie.imgUrl === 'N/A' ? (\n              'https://via.placeholder.com/360x270.png?text=no%20preview'\n            ) : (\n              movie.imgUrl\n            )}\n          />\n        </figure>\n      </div>\n\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {movie.description}\n          <br />\n          <a\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            data-cy=\"movieURL\"\n            href={movie.imdbUrl}\n          >\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = React.memo(({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n));\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\n\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [titleMovie, setTitleMovie] = useState('');\n  const [moviePreview, setMoviePreview] = useState<Movie | null>(null);\n  const [isLoading, setLoading] = useState(false);\n  const [hasError, setError] = useState(false);\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitleMovie(event.target.value);\n    setError(false);\n  };\n\n  const handleClickedSerch = () => {\n    setLoading(true);\n    getMovie(titleMovie.trim())\n      .then(movie => {\n        if (movie.Response === 'False') {\n          setError(true);\n\n          return;\n        }\n\n        setError(false);\n\n        setMoviePreview({\n          title: movie.Title,\n          description: movie.Plot,\n          imgUrl: movie.Poster,\n          imdbUrl: `https://www.imdb.com/title/${movie.imdbID}`,\n          imdbId: movie.imdbID,\n        });\n      })\n      .finally(() => setLoading(false));\n  };\n\n  const handleClickAddMovie = (movie: Movie) => {\n    addMovie(movie);\n    setMoviePreview(null);\n    setTitleMovie('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={event => event.preventDefault()}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              onChange={handleChangeTitle}\n              className={classNames('input', { 'is-danger': hasError })}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={!titleMovie}\n              onClick={handleClickedSerch}\n              className={classNames('button', 'is-light', {\n                'is-loading': isLoading,\n              })}\n            >\n              {moviePreview ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {moviePreview && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => handleClickAddMovie(moviePreview)}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {moviePreview && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={moviePreview} />\n        </div>\n      )}\n    </>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey=687680d0';\n\nexport function getMovie(query: string) {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = (currentMovie: Movie) => {\n    if (movies.find(\n      currentFilm => currentFilm.imdbId === currentMovie.imdbId,\n    )) {\n      return;\n    }\n\n    setMovies(currentMovies => [...currentMovies, currentMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={(movie) => handleAddMovie(movie)} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}